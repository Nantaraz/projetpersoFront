{"ast":null,"code":"import _slicedToArray from \"/home/dev/Bureau/projetperso/enlignefront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/dev/Bureau/projetperso/enlignefront/src/components/readerpdf.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { usePdf } from 'react-pdf-js';\n\nconst MyPdfViewer = () => {\n  const _useState = useState(1),\n        _useState2 = _slicedToArray(_useState, 2),\n        page = _useState2[0],\n        setPage = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        pages = _useState4[0],\n        setPages = _useState4[1];\n\n  const renderPagination = (page, pages) => {\n    if (!pages) {\n      return null;\n    }\n\n    let previousButton = React.createElement(\"li\", {\n      className: \"previous\",\n      onClick: () => setPage(page - 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-arrow-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }), \" Previous\"));\n\n    if (page === 1) {\n      previousButton = React.createElement(\"li\", {\n        className: \"previous disabled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-arrow-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }), \" Previous\"));\n    }\n\n    let nextButton = React.createElement(\"li\", {\n      className: \"next\",\n      onClick: () => setPage(page + 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Next \", React.createElement(\"i\", {\n      className: \"fa fa-arrow-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    })));\n\n    if (page === pages) {\n      nextButton = React.createElement(\"li\", {\n        className: \"next disabled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Next \", React.createElement(\"i\", {\n        className: \"fa fa-arrow-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      })));\n    }\n\n    return React.createElement(\"nav\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"pager\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, previousButton, nextButton));\n  };\n\n  const canvasEl = useRef(null);\n\n  const _usePdf = usePdf({\n    file: 'test.pdf',\n    // onDocumentComplete,\n    page,\n    canvasEl\n  }),\n        _usePdf2 = _slicedToArray(_usePdf, 2),\n        loading = _usePdf2[0],\n        numPages = _usePdf2[1];\n\n  useEffect(() => {\n    setPages(numPages);\n  }, [numPages]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, loading && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Loading...\"), React.createElement(\"canvas\", {\n    ref: canvasEl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), renderPagination(page, pages));\n};\n\nexport default MyPdfViewer;","map":{"version":3,"sources":["/home/dev/Bureau/projetperso/enlignefront/src/components/readerpdf.js"],"names":["React","useState","useEffect","useRef","usePdf","MyPdfViewer","page","setPage","pages","setPages","renderPagination","previousButton","nextButton","canvasEl","file","loading","numPages"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { usePdf } from 'react-pdf-js';\n \nconst MyPdfViewer = () => {\n  const [page, setPage] = useState(1);\n  const [pages, setPages] = useState(null);\n \n  const renderPagination = (page, pages) => {\n    if (!pages) {\n      return null;\n    }\n    let previousButton = <li className=\"previous\" onClick={() => setPage(page - 1)}><a href=\"a\"><i className=\"fa fa-arrow-left\"></i> Previous</a></li>;\n    if (page === 1) {\n      previousButton = <li className=\"previous disabled\"><a href=\"a\"><i className=\"fa fa-arrow-left\"></i> Previous</a></li>;\n    }\n    let nextButton = <li className=\"next\" onClick={() => setPage(page + 1)}><a href=\"a\">Next <i className=\"fa fa-arrow-right\"></i></a></li>;\n    if (page === pages) {\n      nextButton = <li className=\"next disabled\"><a href=\"#\">Next <i className=\"fa fa-arrow-right\"></i></a></li>;\n    }\n    return (\n      <nav>\n        <ul className=\"pager\">\n          {previousButton}\n          {nextButton}\n        </ul>\n      </nav>\n    );\n  }\n \n  const canvasEl = useRef(null);\n \n  const [loading, numPages] = usePdf({\n    file: 'test.pdf',\n    // onDocumentComplete,\n    page,\n    canvasEl\n  });\n \n  useEffect(() => {\n    setPages(numPages);\n  }, [numPages]);\n \n  return (\n    <div>\n      {loading && <span>Loading...</span>}\n      <canvas ref={canvasEl} />\n      {renderPagination(page, pages)}\n    </div>\n  );\n}\n \nexport default MyPdfViewer;"]},"metadata":{},"sourceType":"module"}