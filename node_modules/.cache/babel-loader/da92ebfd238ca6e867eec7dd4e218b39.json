{"ast":null,"code":"import _slicedToArray from \"/home/dev/Bureau/projetperso/enlignefront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport e from \"@bundled-es-modules/pdfjs-dist/build/pdf\";\nimport t, { useRef as r, useEffect as o, useState as a, useMemo as c } from \"react\";\n\nconst n = ({\n  file: e,\n  onDocumentComplete: a,\n  page: c,\n  scale: n,\n  rotate: s,\n  cMapUrl: i,\n  cMapPacked: d,\n  workerSrc: p,\n  withCredentials: h\n}) => {\n  const u = r(null),\n        _l = l({\n    canvasEl: u,\n    file: e,\n    page: c,\n    scale: n,\n    rotate: s,\n    cMapUrl: i,\n    cMapPacked: d,\n    workerSrc: p,\n    withCredentials: h\n  }),\n        _l2 = _slicedToArray(_l, 2),\n        w = _l2[1];\n\n  return o(() => {\n    a(w);\n  }, [w]), t.createElement(\"canvas\", {\n    ref: u\n  });\n};\n\nn.defaultProps = {\n  onDocumentComplete: () => {}\n};\n\nconst l = ({\n  canvasEl: t,\n  file: r,\n  scale: n = 1,\n  rotate: l = 0,\n  page: s = 1,\n  cMapUrl: i,\n  cMapPacked: d,\n  workerSrc: p = \"//cdnjs.cloudflare.com/ajax/libs/pdf.js/2.1.266/pdf.worker.js\",\n  withCredentials: h = !1\n}) => {\n  const _a = a(),\n        _a2 = _slicedToArray(_a, 2),\n        u = _a2[0],\n        w = _a2[1];\n\n  o(() => {\n    e.GlobalWorkerOptions.workerSrc = p;\n  }, []), o(() => {\n    const t = {\n      url: r,\n      withCredentials: h\n    };\n    i && (t.cMapUrl = i, t.cMapPacked = d), e.getDocument(t).promise.then(w);\n  }, [r, h]), o(() => {\n    u && u.getPage(s).then(e => f(e));\n  }, [u, s, n, l, t]);\n\n  const f = e => {\n    const r = 0 === l ? e.rotate : e.rotate + l;\n    let o = 1;\n    o = window.devicePixelRatio;\n    const a = n * o,\n          c = e.getViewport({\n      scale: a,\n      rotation: r\n    }),\n          s = t.current;\n    if (!s) return;\n    const i = s.getContext(\"2d\");\n    s.style.width = \"\".concat(c.width / o, \"px\"), s.style.height = \"\".concat(c.height / o, \"px\"), s.height = c.height, s.width = c.width;\n    const d = {\n      canvasContext: i,\n      viewport: c\n    };\n    e.render(d);\n  },\n        m = c(() => !u, [u]),\n        g = c(() => u ? u._pdfInfo.numPages : null, [u]);\n\n  return [m, g];\n};\n\nexport default n;\nexport { l as usePdf };","map":null,"metadata":{},"sourceType":"module"}